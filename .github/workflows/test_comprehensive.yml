# The full test suite, which will be run anytime anything is merged into master.
# See test_pull_request.yml for the tests that will be run
name: Full Test

on:
  push:
    branches:
      - main
      - "v*x"
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency:
  group: comprehensive-test

jobs:

  check-manifest:
    name: Check Manifest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: astral-sh/setup-uv@v6
      - run: uvx check-manifest

  test:
    name: Test
    uses: pyapp-kit/workflows/.github/workflows/test-pyrepo.yml@v2
    secrets:
      codecov_token: ${{ secrets.CODECOV_TOKEN }}
    with:
      os: ${{ matrix.platform }}
      python-version: ${{ matrix.python-version }}
      qt: ${{ matrix.backend }}
      pip-install-pre-release: ${{ github.event_name == 'schedule' }}
      extras: 'test'
      coverage-upload: artifact

    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        backend: [pyqt5, pyside2, pyqt6]
        exclude:
          # Abort (core dumped) on linux pyqt6, unknown reason
          - platform: ubuntu-latest
            backend: pyqt6
          # lack of wheels for pyside2 on MacOS
          - platform: macos-latest
            backend: pyside2
          # lack of wheels for pyside2/py3.11
          - python-version: "3.9"
            backend: pyside2
          - python-version: "3.10"
            backend: pyside2
          - python-version: "3.11"
            backend: pyside2
          - python-version: "3.12"
            backend: pyside2
          - python-version: "3.12"
            backend: pyqt5
          # super slow
          - python-version: "3.13"
            backend: pyqt6
            platform: windows-latest
        include:
          - python-version: "3.13"
            platform: ubuntu-latest
            backend: "pyqt6"
          - python-version: "3.10"
            platform: macos-latest
            backend: "'pyside6<6.8'"
          - python-version: "3.11"
            platform: macos-latest
            backend: "'pyside6<6.8'"
          - python-version: "3.10"
            platform: windows-latest
            backend: "'pyside6<6.8'"
          - python-version: "3.12"
            platform: windows-latest
            backend: "'pyside6<6.8'"
          # legacy Qt
          - python-version: 3.9
            platform: ubuntu-latest
            backend: "pyqt5==5.12.*"
          - python-version: 3.9
            platform: ubuntu-latest
            backend: "pyqt5==5.13.*"
          - python-version: 3.9
            platform: ubuntu-latest
            backend: "pyqt5==5.14.*"

  test_examples:
    name: test examples
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: astral-sh/setup-uv@v6
        with:
          python-version: 3.10

      - uses: tlambert03/setup-qt-libs@v1
      - name: Install this commit
        run: |
          uv pip install --upgrade pip
          uv pip install setuptools tox tox-gh-actions

      - name: Test
        uses: aganders3/headless-gui@v2
        with:
          run: tox -e py310-linux-pyqt6-examples

#  deploy:
#    name: Deploy to Test PyPI and PyPI
#    # this will run when you have tagged a commit, starting with "v*"
#    # and requires that you have put your twine API key in your
#    # github secrets (see readme for details)
#    needs: [test, test_pip_install, test_examples]
#    runs-on: ubuntu-latest
#    if: contains(github.ref, 'tags')
#    steps:
#      - uses: actions/checkout@v5
#      - name: Set up Python
#        uses: actions/setup-python@v4
#        with:
#          python-version: "3.x"
#
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          python -m pip install -e .[build]  # need full install so we can build type stubs
#
#      - name: Build package
#        run: |
#          make dist
#
#      - name: Publish to Test PyPI
#        uses: pypa/gh-action-pypi-publish@master
#        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
#        with:
#          user: __token__
#          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
#          repository_url: https://test.pypi.org/legacy/
#
#      - name: Publish to PyPI
#        uses: pypa/gh-action-pypi-publish@master
#        if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
#        with:
#          user: __token__
#          password: ${{ secrets.PYPI_API_TOKEN }}