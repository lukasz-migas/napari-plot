# For more information about tox, see https://tox.readthedocs.io/en/latest/
[tox]
envlist = py{310,311,312,313}-{linux,macos,windows}-{pyqt5,pyside2,pyqt6,pyside6}
isolated_build = true
toxworkdir={env:TOX_WORK_DIR:/tmp/.tox}

[coverage:report]
exclude_lines =
    pragma: no cover
    if TYPE_CHECKING:
    \.\.\.
    except ImportError*
    raise NotImplementedError()
omit =
    napari_plot/_version.py
    *tests*


[gh-actions]
python =
    3.9: py39
    3.10: py310
    3.11: py311
    3.12: py312
    3.13: py313
fail_on_no_env = True
    
[gh-actions:env]
PLATFORM =
    Linux: linux
    Windows: windows
    macOS: macos
BACKEND =
    pyqt5: pyqt5
    pyqt6: pyqt6
    pyside2: pyside2
    pyside6: pyside6
    headless: headless

[testenv]
platform = 
    macos: darwin
    linux: linux
    windows: win32
passenv = 
    CI
    GITHUB_ACTIONS
    DISPLAY
    XAUTHORITY
    NUMPY_EXPERIMENTAL_ARRAY_FUNCTION
    PYVISTA_OFF_SCREEN
    MIN_REQ
    CONDA_EXE
    CONDA
# Set various environment variables, depending on the factors in
# the tox environment being run
setenv =
    PYTHONPATH = {toxinidir}
deps =
    pytest-cov  # https://pytest-cov.readthedocs.io/en/latest/
    pyqt6: PyQt6
    pyside6: PySide6 < 6.3.2 ; python_version < '3.10'
    pyside6: PySide6 ; python_version >= '3.10'
    pytest-json-report
    # you can remove these if you don't use them
    napari
    magicgui
# use extras specified in setup.cfg for certain test envs
extras =
    testing
    pyqt5: pyqt5
    pyside2: pyside2
    pyqt6: pyqt6
    pyside6: pyside6
commands_pre =
    # strictly only need to uninstall pytest-qt (which will raise without a backend)
    # the rest is for good measure
    headless: pip uninstall -y pytest-qt qtpy pyqt5 pyside2 pyside6 pyqt6 pytest-qt
commands =
    !headless: python -m pytest {env:PYTEST_PATH:} --color=yes --basetemp={envtmpdir} \
        --cov-report=xml --cov={env:PYTEST_PATH:napari_plot} --ignore tools --maxfail=5 \
        --json-report --json-report-file={toxinidir}/report-{envname}.json \
        {posargs}

    # do not add ignores to this line just to make headless tests pass.
    # nothing outside of _qt or _vispy should require Qt or make_napari_viewer
    headless: python -m pytest --color=yes --basetemp={envtmpdir} --ignore napari_plot/_vispy \
        --ignore napari_plot/_qt --ignore napari_plot/_tests \
        --json-report --json-report-file={toxinidir}/report-{envname}.json {posargs}

;commands = pytest -v --color=yes --cov=napari_plot --cov-report=xml



[testenv:py{310,311,312,313}-{linux,macos,windows}-{pyqt6,pyside6}-examples]
commands =
    python -m pytest napari_plot/_tests/test_examples.py -v --color=yes --basetemp={envtmpdir} {posargs}

[testenv:ruff]
skip_install = True
deps = pre-commit
commands = pre-commit run ruff --all-files

[testenv:import-lint]
skip_install = True
deps = pre-commit
commands = pre-commit run --hook-stage manual import-linter --all-files

[testenv:package]
isolated_build = true
skip_install = true
deps =
    check_manifest
    wheel
    twine
    build
commands =
    check-manifest
    python -m build
    python -m twine check dist/*