[build-system]
requires = [
  "setuptools >= 69",
  "wheel",
  "setuptools_scm[toml]>=8"
]
build-backend = "setuptools.build_meta"

# Project
[project]
name = "napari_plot"
description = "Plugin providing support for 1d plotting in napari"
authors = [
    { name = "Lukasz Migas", email = "lukas.migas@yahoo.com" },
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: X11 Applications :: Qt",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: C",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Visualization",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Utilities",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Operating System :: Unix",
    "Operating System :: MacOS",
    "Framework :: napari"
]
requires-python = ">=3.9"
dependencies = [
  	"napari-plugin-engine>=0.2.0",
	"numpy",
	"qtpy",
	"qtawesome>=1.2.0",
	"napari==0.5.6",
	"matplotlib",
	"vispy",
	"koyo",
#    "qtextra",
]
dynamic = [
  "version"
]

[project.license]
text = "BSD 3-Clause"

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
Homepage = "https://github.com/lukasz-migas/napari-plot"
Download = "https://github.com/lukasz-migas/napari-plot"
"Bug Tracker" = "https://github.com/lukasz-migas/napari-plot/issues"
Documentation = "https://github.com/lukasz-migas/napari-plot#README.md"
"Source Code" = "https://github.com/lukasz-migas/napari-plot"


[project.optional-dependencies]
pyside2 = [
    "PySide2>=5.13.2,!=5.15.0 ; python_version < '3.11' and platform_machine != 'arm64'",
]
pyside6_experimental = [
    "PySide6 < 6.5 ; python_version < '3.12'"
]
pyqt6 = [
    "PyQt6 > 6.5",
    "PyQt6 != 6.6.1 ; platform_system == 'Darwin'"
]
pyside = [
    "napari_plot[pyside2]"
]
pyqt5 = [
    "PyQt5>=5.13.2,!=5.15.0",
]
pyqt = [
    "napari_plot[pyqt5]"
]
qt = [
    "napari_plot[pyqt]"
]
all = [
    "napari_plot[pyqt,optional]",
    "napari-plugin-manager >=0.1.3, <0.2.0",
]
optional = [
    "triangle ; platform_machine != 'arm64'",
    "numba>=0.57.1",
    "zarr>=2.12.0", # needed by `builtins` (dask.array.from_zarr) to open zarr
]
testing = [
    "babel>=2.9.0",
    "fsspec>=2023.10.0",
    "hypothesis>=6.8.0",
    "lxml[html_clean]>5",
    "matplotlib >= 3.6.1",
    "numba>=0.57.1",
    "pooch>=1.6.0",
    "coverage>7",
    "docstring_parser>=0.15",
    "pretend>=1.0.9",
    "pyautogui>=0.9.54",
    "pytest-qt>=4.3.1",
    "pytest-pretty>=1.1.0",
    "pytest>=8.1.0",
    "tensorstore>=0.1.13",
    "virtualenv>=20.17",
    "xarray>=0.16.2",
    "zarr>=2.12.0",
    "IPython>=7.25.0",
    "qtconsole>=4.5.1",
    "rich>=12.0.0",
    "napari-plugin-manager >=0.1.0a2, <0.2.0",
]
testing_extra = [
    "torch>=1.7",
]
release = [
    "PyGithub>=1.44.1",
    "twine>=3.1.1",
    "gitpython>=3.1.0",
    "requests-cache>=0.9.2",
]
dev = [
    "ruff",
    "pdbpp",
    "check-manifest>=0.42",
    "pre-commit>=2.9.0",
    "pydantic[dotenv]",
    "napari_plot[testing]",
]
build = [
    "ruff",
    "pyqt5",
]
docs = [
    "mkdocs",
    "mkdocs-material",
    "mkdocs-minify-plugin",
    "mkdocstrings@git+https://github.com/mkdocstrings/mkdocstrings.git@aa77b9c",
    "mkdocstrings-python@git+https://github.com/mkdocstrings/python.git@480d0c3",
    "markdown-changelog"
]

[project.entry-points.pytest11]
napari_plot = "napari_plot.utils._testsupport"

[project.entry-points."napari.manifest"]
napari_plot = "napari_plot:napari.yaml"

[project.scripts]
napari-plot = "napari_plot.__main__:main"
napari_plot = "napari_plot.__main__:main"

# Tools
[tool.setuptools]
zip-safe = false
include-package-data = true
license-files = [
    "LICENSE",
]

[tool.setuptools.packages.find]
namespaces = false

[tool.setuptools.package-data]
"*" = [
    "*.pyi",
]

[tool.setuptools_scm]
write_to = "napari_plot/_version.py"

[tool.check-manifest]
ignore = [
  "bundle.py",
  ".cirrus.yml",
  ".pre-commit-config.yaml",
  "asv.conf.json",
  "codecov.yml",
  "Makefile",
  "mypy.ini",
  "tools/minreq.py",
  "tox.ini",
  ".deepsource.toml",
  "*.pyi",  # added by make typestubs
  "napari_plot/_version.py",  # added during build by setuptools_scm
  "scripts/*.bat",  # scripts
  "renovate.json",
]


[tool.ruff]
line-length = 120
target-version = "py38"
fix = true
exclude = [
  ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".mypy_cache",
    ".pants.d",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "*vendored*",
    "*_vendor*",
]

[tool.ruff.format]
quote-style = "double"

[tool.ruff.lint]
select = [
    "E", "F", "W", #flake8
    "UP", # pyupgrade
    "I", # isort
    "YTT", #flake8-2020
#    "TC", # flake8-type-checing
    "BLE", # flake8-blind-exception
    "B", # flake8-bugbear
    "A", # flake8-builtins
    "C4", # flake8-comprehensions
    "ISC", # flake8-implicit-str-concat
    "G", # flake8-logging-format
    "PIE", # flake8-pie
    "COM", # flake8-commas
    "SIM", # flake8-simplify
    "INP", # flake8-no-pep420
    "PYI", # flake8-pyi
    "Q", # flake8-quotes
    "RSE", # flake8-raise
    "RET", # flake8-return
    "TID",  # flake8-tidy-imports # replace absolutify import
    "TRY", # tryceratops
    "ICN", # flake8-import-conventions
    "RUF", # ruff specyfic rules
    "NPY201", # checks compatibility with numpy version 2.0
    "ASYNC", # flake8-async
    "EXE", # flake8-executable
    "FA", # flake8-future-annotations
    "LOG", # flake8-logging
    "SLOT", # flake8-slots
    "PT", # flake8-pytest-style
    "T20", # flake8-print
]
ignore = [
    "E501",
#    "TC001", "TC002", "TC003",
    "A003", # flake8-builtins - we have class attributes violating these rule
    "COM812", # flake8-commas - we don't like adding comma on single line of arguments
    "COM819", # conflicts with ruff-format
    "SIM117", # flake8-simplify - we some of merged with statements are not looking great with black, reanble after drop python 3.9
    "RET504", # not fixed yet https://github.com/charliermarsh/ruff/issues/2950
    "TRY003", # require implement multiple exception class
    "RUF005", # problem with numpy compatybility, see https://github.com/charliermarsh/ruff/issues/2142#issuecomment-1451038741
    "B028", # need to be fixed
    "PYI015", # it produces bad looking files (@jni opinion)
    "W191", "Q000", "Q001", "Q002", "Q003", "ISC001", # https://docs.astral.sh/ruff/formatter/#conflicting-lint-rules
]

[tool.ruff.lint.per-file-ignores]
"napari_plot/_vispy/__init__.py" = ["E402"]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.ruff.lint.isort]
known-first-party=['napari_plot']
combine-as-imports = true

[tool.pytest.ini_options]
# These follow standard library warnings filters syntax.  See more here:
# https://docs.python.org/3/library/warnings.html#describing-warning-filters
addopts = "--maxfail=10 --durations=10"

filterwarnings = [
  "error:::napari_plot", # turn warnings from napari into errors
  "ignore::DeprecationWarning:shibokensupport",
  "ignore::DeprecationWarning:ipykernel",
  "ignore::DeprecationWarning:pyreadline",
  "ignore::UserWarning",
  "ignore::DeprecationWarning",
  "ignore::RuntimeWarning",
]
markers = [
    "examples: Test of examples",
    "disable_qthread_start: Disable thread start in this Test",
    "disable_qthread_pool_start: Disable strarting QRunnable using QThreadPool start in this Test",
    "disable_qtimer_start: Disable timer start in this Test",
    "disable_qanimation_start: Disable animation start in this Test",
]

[tool.mypy]
files = "napari_plot"
ignore_missing_imports = true
exclude = [
  "_tests",
]
show_error_codes = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
check_untyped_defs = true
# # maybe someday :)
# disallow_any_generics = true
# no_implicit_reexport = true
# disallow_untyped_defs = true